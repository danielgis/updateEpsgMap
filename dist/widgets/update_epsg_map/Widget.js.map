{"version":3,"sources":["../../../widgets/update_epsg_map/Widget.js"],"names":["define","declare","BaseWidget","_WidgetsInTemplateMixin","Map","SpatialReference","Extent","FeatureLayer","ArcGISDynamicMapServiceLayer","baseClass","epsg","center","xmin","ymin","xmax","ymax","zona","url_cmi","url_basemap","urlAgsIngemmet","postCreate","inherited","arguments","console","log","err","startup","getPanel","titleLabelNode","innerHTML","nls","widgetTitle","_updateSrcView","selectUEM","value","src","wkid","parseInt","ext","map","removeAllLayers","basemap","addLayer","featureLayer","_getFeatureServiceUrl","urlFeature"],"mappings":"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","file":"Widget.js","sourcesContent":["define([\r\n        'dojo/_base/declare',\r\n        'jimu/BaseWidget',\r\n        'dijit/_WidgetsInTemplateMixin',\r\n        'esri/map',\r\n        'esri/SpatialReference',\r\n        'esri/geometry/Extent',\r\n        \"esri/layers/FeatureLayer\",\r\n        \"esri/layers/ArcGISDynamicMapServiceLayer\",\r\n        'dojox/widget/TitleGroup',\r\n        'dijit/form/Select',\r\n        'dijit/TitlePane',\r\n        'dijit/form/TextBox'\r\n    ],\r\n    function(\r\n        declare,\r\n        BaseWidget,\r\n        _WidgetsInTemplateMixin,\r\n        Map,\r\n        SpatialReference,\r\n        Extent,\r\n        FeatureLayer,\r\n        ArcGISDynamicMapServiceLayer\r\n    ) {\r\n        //To create a widget, you need to derive from BaseWidget.\r\n        return declare([BaseWidget, _WidgetsInTemplateMixin], {\r\n\r\n            // Custom widget code goes here\r\n\r\n            baseClass: 'update-epsg-map',\r\n            epsg: null,\r\n            center: {\r\n                '32717': {\r\n                    xmin: -10142884.841428969,\r\n                    ymin: -1980962.564791115,\r\n                    xmax: -6424987.785638983,\r\n                    ymax: 63880.81589337652,\r\n                    zona: 17,\r\n                    url_cmi: 'WGS84_17/WEBGIS_CATASTRO_MINERO_WGS84_17/MapServer/0',\r\n                    url_basemap: \"WGS84_17/WEBGIS_PAISES_UTM_WGS84_17/MapServer\"\r\n                },\r\n                '32718': {\r\n                    xmin: -10114105.37080958,\r\n                    ymin: -2016984.56600928,\r\n                    xmax: -6396208.3150195945,\r\n                    ymax: 27858.81467521147,\r\n                    zona: 18,\r\n                    url_cmi: 'WGS84_18/WEBGIS_CATASTRO_MINERO_WGS84_18/MapServer/0',\r\n                    url_basemap: \"WGS84_17/WEBGIS_PAISES_UTM_WGS84_17/MapServer\"\r\n                },\r\n                '32719': {\r\n                    xmin: -10056890.70524422,\r\n                    ymin: -1985573.973288541,\r\n                    xmax: -6338993.649454236,\r\n                    ymax: 59269.407395950635,\r\n                    zona: 19,\r\n                    url_cmi: 'WGS84_19/WEBGIS_CATASTRO_MINERO_WGS84_19/MapServer/0',\r\n                    url_basemap: \"WGS84_17/WEBGIS_PAISES_UTM_WGS84_17/MapServer\"\r\n                }\r\n            },\r\n            urlAgsIngemmet: 'https://geocatminapp.ingemmet.gob.pe/arcgis/rest/services/',\r\n            // this property is set by the framework when widget is loaded.\r\n            // name: 'update_epsg_map',\r\n            // add additional properties here\r\n\r\n            //methods to communication with app container:\r\n            postCreate: function() {\r\n                try {\r\n                    this.inherited(arguments);\r\n                    console.log('update_epsg_map::postCreate');\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n\r\n            },\r\n\r\n            startup: function() {\r\n                try {\r\n                    this.inherited(arguments);\r\n                    console.log('update_epsg_map::startup');\r\n                    this.getPanel().titleLabelNode.innerHTML = this.nls.widgetTitle;\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n\r\n            },\r\n\r\n            _updateSrcView: function() {\r\n                this.epsg = this.selectUEM.value\r\n\r\n                const src = new SpatialReference({\r\n                    wkid: parseInt(this.epsg)\r\n                });\r\n\r\n                var ext = this.center[this.epsg];\r\n\r\n                this.map.removeAllLayers();\r\n\r\n                // this.map.spatialReference = src;\r\n\r\n                var basemap = new ArcGISDynamicMapServiceLayer(this.urlAgsIngemmet + ext.url_basemap);\r\n\r\n                this.map.addLayer(basemap);\r\n\r\n                // let customExtent = new Extent(ext.xmin, ext.ymin, ext.xmax, ext.ymax, src);\r\n                // this.map.setExtent(customExtent);\r\n                // this.map.setBasemap('satellite');\r\n                var featureLayer = this._getFeatureServiceUrl(this.map);\r\n                this.map.addLayer(featureLayer);\r\n\r\n            },\r\n\r\n            _getFeatureServiceUrl: function() {\r\n                var urlFeature = this.urlAgsIngemmet + this.center[this.epsg].url_cmi;\r\n                var featureLayer = new FeatureLayer(urlFeature);\r\n                return featureLayer;\r\n            }\r\n\r\n            // onOpen: function(){\r\n            //   console.log('update_epsg_map::onOpen');\r\n            // },\r\n\r\n            // onClose: function(){\r\n            //   console.log('update_epsg_map::onClose');\r\n            // },\r\n\r\n            // onMinimize: function(){\r\n            //   console.log('update_epsg_map::onMinimize');\r\n            // },\r\n\r\n            // onMaximize: function(){\r\n            //   console.log('update_epsg_map::onMaximize');\r\n            // },\r\n\r\n            // onSignIn: function(credential){\r\n            //   console.log('update_epsg_map::onSignIn', credential);\r\n            // },\r\n\r\n            // onSignOut: function(){\r\n            //   console.log('update_epsg_map::onSignOut');\r\n            // }\r\n\r\n            // onPositionChange: function(){\r\n            //   console.log('update_epsg_map::onPositionChange');\r\n            // },\r\n\r\n            // resize: function(){\r\n            //   console.log('update_epsg_map::resize');\r\n            // }\r\n\r\n            //methods to communication between widgets:\r\n\r\n        });\r\n\r\n    });"]}