{"version":3,"sources":["../../../widgets/update_epsg_map/Widget.js"],"names":["define","declare","BaseWidget","_WidgetsInTemplateMixin","Map","Draw","SpatialReference","Extent","FeatureLayer","ArcGISDynamicMapServiceLayer","Graphic","SimpleMarkerSymbol","SimpleLineSymbol","SimpleFillSymbol","Color","geometryEngine","PanelManager","array","baseClass","epsg","center","xmin","ymin","xmax","ymax","zona","url_cmi","url_basemap","urlAgsIngemmet","geoms","graphicBuffer","postCreate","inherited","arguments","console","log","getPanel","titleLabelNode","innerHTML","nls","widgetTitle","err","startup","self","_createToolbarUEM","_updateSrcView","selectUEM","value","src","wkid","parseInt","ext","map","removeAllLayers","basemap","addLayer","featureLayer","_getFeatureServiceUrl","urlFeature","_activateToolUEM","evt","tool","target","id","toUpperCase","tb","activate","graphics","clear","on","_addToMapUEM","_customStyleMarker","style","STYLE_CIRCLE","colorMark","fromHex","config","simbologia","point","colorMarker","colorLine","colorBorderMarker","size","sizeMarker","width","sizeBorderMarker","sls","STYLE_SOLID","symbol","_customStyleBuffer","deactivate","graphic","geometry","add","_createBuffer","push","geom","distance","dijit","byId","buffer","geodesicBuffer","distancia","unt","setExtent","getExtent","widget","appConfig","getConfigElementsByName","idwidget","openWidgetById","_changeSliderUEM","length","remove","slice"],"mappings":"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","file":"Widget.js","sourcesContent":["define([\r\n        'dojo/_base/declare',\r\n        'jimu/BaseWidget',\r\n        'dijit/_WidgetsInTemplateMixin',\r\n        'esri/map',\r\n        'esri/toolbars/draw',\r\n        'esri/SpatialReference',\r\n        'esri/geometry/Extent',\r\n        \"esri/layers/FeatureLayer\",\r\n        \"esri/layers/ArcGISDynamicMapServiceLayer\",\r\n        \"esri/graphic\",\r\n        \"esri/symbols/SimpleMarkerSymbol\",\r\n        \"esri/symbols/SimpleLineSymbol\",\r\n        \"esri/symbols/SimpleFillSymbol\",\r\n        'dojo/_base/Color',\r\n        \"esri/geometry/geometryEngine\",\r\n        'jimu/PanelManager',\r\n        'dojo/_base/array',\r\n        'dojox/widget/TitleGroup',\r\n        'dijit/form/Select',\r\n        'dijit/TitlePane',\r\n        'dijit/form/TextBox',\r\n        'dijit/form/Button',\r\n        'dijit/form/HorizontalSlider',\r\n        'dijit/form/HorizontalRule',\r\n        'dijit/form/HorizontalRuleLabels'\r\n    ],\r\n    function(\r\n        declare,\r\n        BaseWidget,\r\n        _WidgetsInTemplateMixin,\r\n        Map,\r\n        Draw,\r\n        SpatialReference,\r\n        Extent,\r\n        FeatureLayer,\r\n        ArcGISDynamicMapServiceLayer,\r\n        Graphic,\r\n        SimpleMarkerSymbol,\r\n        SimpleLineSymbol,\r\n        SimpleFillSymbol,\r\n        Color,\r\n        geometryEngine,\r\n        PanelManager,\r\n        array\r\n    ) {\r\n        //To create a widget, you need to derive from BaseWidget.\r\n        return declare([BaseWidget, _WidgetsInTemplateMixin], {\r\n\r\n            // Custom widget code goes here\r\n\r\n            baseClass: 'update-epsg-map',\r\n            epsg: null,\r\n            center: {\r\n                '32717': {\r\n                    xmin: -10142884.841428969,\r\n                    ymin: -1980962.564791115,\r\n                    xmax: -6424987.785638983,\r\n                    ymax: 63880.81589337652,\r\n                    zona: 17,\r\n                    url_cmi: 'WGS84_17/WEBGIS_CATASTRO_MINERO_WGS84_17/MapServer/0',\r\n                    url_basemap: \"WGS84_17/WEBGIS_PAISES_UTM_WGS84_17/MapServer\"\r\n                },\r\n                '32718': {\r\n                    xmin: -10114105.37080958,\r\n                    ymin: -2016984.56600928,\r\n                    xmax: -6396208.3150195945,\r\n                    ymax: 27858.81467521147,\r\n                    zona: 18,\r\n                    url_cmi: 'WGS84_18/WEBGIS_CATASTRO_MINERO_WGS84_18/MapServer/0',\r\n                    url_basemap: \"WGS84_17/WEBGIS_PAISES_UTM_WGS84_17/MapServer\"\r\n                },\r\n                '32719': {\r\n                    xmin: -10056890.70524422,\r\n                    ymin: -1985573.973288541,\r\n                    xmax: -6338993.649454236,\r\n                    ymax: 59269.407395950635,\r\n                    zona: 19,\r\n                    url_cmi: 'WGS84_19/WEBGIS_CATASTRO_MINERO_WGS84_19/MapServer/0',\r\n                    url_basemap: \"WGS84_17/WEBGIS_PAISES_UTM_WGS84_17/MapServer\"\r\n                }\r\n            },\r\n            urlAgsIngemmet: 'https://geocatminapp.ingemmet.gob.pe/arcgis/rest/services/',\r\n            geoms: [],\r\n            graphicBuffer: [],\r\n            // this property is set by the framework when widget is loaded.\r\n            // name: 'update_epsg_map',\r\n            // add additional properties here\r\n\r\n            //methods to communication with app container:\r\n            postCreate: function() {\r\n                try {\r\n                    this.inherited(arguments);\r\n                    console.log('update_epsg_map::postCreate');\r\n                    this.getPanel().titleLabelNode.innerHTML = this.nls.widgetTitle;\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            },\r\n\r\n            startup: function() {\r\n                try {\r\n                    this.inherited(arguments);\r\n                    console.log('update_epsg_map::startup');\r\n                    self = this; // Conservar el contexto incial de this\r\n                    this._createToolbarUEM();\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            },\r\n\r\n            _updateSrcView: function() {\r\n                this.epsg = this.selectUEM.value\r\n\r\n                const src = new SpatialReference({\r\n                    wkid: parseInt(this.epsg)\r\n                });\r\n\r\n                var ext = this.center[this.epsg];\r\n\r\n                this.map.removeAllLayers();\r\n\r\n                // this.map.spatialReference = src;\r\n\r\n                var basemap = new ArcGISDynamicMapServiceLayer(this.urlAgsIngemmet + ext.url_basemap);\r\n\r\n                this.map.addLayer(basemap);\r\n\r\n                // let customExtent = new Extent(ext.xmin, ext.ymin, ext.xmax, ext.ymax, src);\r\n                // this.map.setExtent(customExtent);\r\n                // this.map.setBasemap('satellite');\r\n                var featureLayer = this._getFeatureServiceUrl(this.map);\r\n                this.map.addLayer(featureLayer);\r\n            },\r\n\r\n            _getFeatureServiceUrl: function() {\r\n                var urlFeature = this.urlAgsIngemmet + this.center[this.epsg].url_cmi;\r\n                var featureLayer = new FeatureLayer(urlFeature);\r\n                return featureLayer;\r\n            },\r\n\r\n\r\n            _activateToolUEM: function(evt) {\r\n                // id del tag contenedor utilizado (convertir a mayusculas)\r\n                var tool = evt.target.id.toUpperCase();\r\n                if (tool != \"ERASE\") {\r\n                    // Se establece el tipo de geometria a graficar por el id del tag contenedor\r\n                    tb.activate(Draw[tool]);\r\n                } else {\r\n                    // Elimina todos los graficos generados\r\n                    this.map.graphics.clear();\r\n                    self.geoms = [];\r\n                    self.graphicBuffer = [];\r\n                }\r\n            },\r\n\r\n            _createToolbarUEM: function() {\r\n                tb = new Draw(this.map);\r\n                tb.on('draw-end', this._addToMapUEM);\r\n            },\r\n\r\n            _customStyleMarker: function() {\r\n                // Configurar estilo del Marker\r\n                let style = SimpleMarkerSymbol.STYLE_CIRCLE;\r\n                let colorMark = new Color.fromHex(self.config.simbologia.point.colorMarker);\r\n                let colorLine = new Color.fromHex(self.config.simbologia.point.colorBorderMarker);\r\n                let size = self.config.simbologia.point.sizeMarker;\r\n                let width = self.config.simbologia.point.sizeBorderMarker;\r\n                let sls = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, colorLine, width);\r\n                var symbol = new SimpleMarkerSymbol(style, size, sls, colorMark);\r\n                return symbol;\r\n            },\r\n\r\n            _customStyleBuffer: function() {\r\n                // Configurar estilo del Marker\r\n                var symbol = new SimpleFillSymbol();\r\n                return symbol;\r\n            },\r\n\r\n            _addToMapUEM: function(evt) {\r\n                this.map.graphics.clear();\r\n                // Se desactiva el evento de dibujo\r\n                tb.deactivate();\r\n\r\n                // Obtener el estilo del marker\r\n                var symbol = self._customStyleMarker();\r\n\r\n                // Agregando estilo al grafico\r\n                var graphic = new Graphic(evt.geometry, symbol);\r\n\r\n                // Agregando el grafico al mapa\r\n                this.map.graphics.add(graphic);\r\n                self._createBuffer(evt.geometry);\r\n                self.geoms.push(evt.geometry);\r\n            },\r\n\r\n            _createBuffer: function(geom) {\r\n                let distance = dijit.byId(\"horizontalSlider\").value;\r\n                var buffer = geometryEngine.geodesicBuffer(geom, [distance], self.config.distancia.unt, false);\r\n                var symbol = self._customStyleBuffer();\r\n                var graphic = new Graphic(buffer, symbol);\r\n                this.map.graphics.add(graphic);\r\n                this.map.setExtent(buffer.getExtent(), true);\r\n                self.graphicBuffer.push(graphic);\r\n\r\n                // Abrir widget por nombre\r\n                let widget = self.appConfig.getConfigElementsByName(\"serviceTotem\");\r\n                let idwidget = widget[0].id;\r\n\r\n                self.openWidgetById(idwidget);\r\n            },\r\n\r\n            _changeSliderUEM: function(evt) {\r\n                if (self.geoms.length == 0) {\r\n                    return\r\n                }\r\n                this.map.graphics.remove(self.graphicBuffer.slice(-1)[0]);\r\n                self._createBuffer(self.geoms.slice(-1)[0]);\r\n            }\r\n\r\n            // onOpen: function(){\r\n            //   console.log('update_epsg_map::onOpen');\r\n            // },\r\n\r\n            // onClose: function(){\r\n            //   console.log('update_epsg_map::onClose');\r\n            // },\r\n\r\n            // onMinimize: function(){\r\n            //   console.log('update_epsg_map::onMinimize');\r\n            // },\r\n\r\n            // onMaximize: function(){\r\n            //   console.log('update_epsg_map::onMaximize');\r\n            // },\r\n\r\n            // onSignIn: function(credential){\r\n            //   console.log('update_epsg_map::onSignIn', credential);\r\n            // },\r\n\r\n            // onSignOut: function(){\r\n            //   console.log('update_epsg_map::onSignOut');\r\n            // }\r\n\r\n            // onPositionChange: function(){\r\n            //   console.log('update_epsg_map::onPositionChange');\r\n            // },\r\n\r\n            // resize: function(){\r\n            //   console.log('update_epsg_map::resize');\r\n            // }\r\n\r\n            //methods to communication between widgets:\r\n\r\n        });\r\n\r\n    });"]}