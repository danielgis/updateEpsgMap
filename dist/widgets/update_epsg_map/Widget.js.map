{"version":3,"sources":["../../../widgets/update_epsg_map/Widget.js"],"names":["define","declare","BaseWidget","_WidgetsInTemplateMixin","Map","Draw","SpatialReference","Extent","FeatureLayer","ArcGISDynamicMapServiceLayer","Graphic","SimpleMarkerSymbol","SimpleLineSymbol","Color","lang","baseClass","epsg","center","xmin","ymin","xmax","ymax","zona","url_cmi","url_basemap","urlAgsIngemmet","postCreate","inherited","arguments","console","log","getPanel","titleLabelNode","innerHTML","nls","widgetTitle","err","startup","_createToolbarUEM","_updateSrcView","selectUEM","value","src","wkid","parseInt","ext","map","removeAllLayers","basemap","addLayer","featureLayer","_getFeatureServiceUrl","urlFeature","_activateToolUEM","evt","tool","target","id","toUpperCase","tb","activate","graphics","clear","on","_addToMapUEM","deactivate","style","STYLE_CIRCLE","colorMark","fromHex","colorLine","size","width","sls","STYLE_SOLID","symbol","graphic","geometry","add"],"mappings":"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","file":"Widget.js","sourcesContent":["define([\r\n        'dojo/_base/declare',\r\n        'jimu/BaseWidget',\r\n        'dijit/_WidgetsInTemplateMixin',\r\n        'esri/map',\r\n        'esri/toolbars/draw',\r\n        'esri/SpatialReference',\r\n        'esri/geometry/Extent',\r\n        \"esri/layers/FeatureLayer\",\r\n        \"esri/layers/ArcGISDynamicMapServiceLayer\",\r\n        \"esri/graphic\",\r\n        \"esri/symbols/SimpleMarkerSymbol\",\r\n        \"esri/symbols/SimpleLineSymbol\",\r\n        'dojo/_base/Color',\r\n        \"dojo/_base/lang\",\r\n        'dojox/widget/TitleGroup',\r\n        'dijit/form/Select',\r\n        'dijit/TitlePane',\r\n        'dijit/form/TextBox',\r\n        'dijit/form/Button',\r\n        'dijit/form/HorizontalSlider',\r\n        'dijit/form/HorizontalRule',\r\n        'dijit/form/HorizontalRuleLabels'\r\n    ],\r\n    function(\r\n        declare,\r\n        BaseWidget,\r\n        _WidgetsInTemplateMixin,\r\n        Map,\r\n        Draw,\r\n        SpatialReference,\r\n        Extent,\r\n        FeatureLayer,\r\n        ArcGISDynamicMapServiceLayer,\r\n        Graphic,\r\n        SimpleMarkerSymbol,\r\n        SimpleLineSymbol,\r\n        Color,\r\n        lang\r\n    ) {\r\n        //To create a widget, you need to derive from BaseWidget.\r\n        return declare([BaseWidget, _WidgetsInTemplateMixin], {\r\n\r\n            // Custom widget code goes here\r\n\r\n            baseClass: 'update-epsg-map',\r\n            epsg: null,\r\n            center: {\r\n                '32717': {\r\n                    xmin: -10142884.841428969,\r\n                    ymin: -1980962.564791115,\r\n                    xmax: -6424987.785638983,\r\n                    ymax: 63880.81589337652,\r\n                    zona: 17,\r\n                    url_cmi: 'WGS84_17/WEBGIS_CATASTRO_MINERO_WGS84_17/MapServer/0',\r\n                    url_basemap: \"WGS84_17/WEBGIS_PAISES_UTM_WGS84_17/MapServer\"\r\n                },\r\n                '32718': {\r\n                    xmin: -10114105.37080958,\r\n                    ymin: -2016984.56600928,\r\n                    xmax: -6396208.3150195945,\r\n                    ymax: 27858.81467521147,\r\n                    zona: 18,\r\n                    url_cmi: 'WGS84_18/WEBGIS_CATASTRO_MINERO_WGS84_18/MapServer/0',\r\n                    url_basemap: \"WGS84_17/WEBGIS_PAISES_UTM_WGS84_17/MapServer\"\r\n                },\r\n                '32719': {\r\n                    xmin: -10056890.70524422,\r\n                    ymin: -1985573.973288541,\r\n                    xmax: -6338993.649454236,\r\n                    ymax: 59269.407395950635,\r\n                    zona: 19,\r\n                    url_cmi: 'WGS84_19/WEBGIS_CATASTRO_MINERO_WGS84_19/MapServer/0',\r\n                    url_basemap: \"WGS84_17/WEBGIS_PAISES_UTM_WGS84_17/MapServer\"\r\n                }\r\n            },\r\n            urlAgsIngemmet: 'https://geocatminapp.ingemmet.gob.pe/arcgis/rest/services/',\r\n            // this property is set by the framework when widget is loaded.\r\n            // name: 'update_epsg_map',\r\n            // add additional properties here\r\n\r\n            //methods to communication with app container:\r\n            postCreate: function() {\r\n                try {\r\n                    this.inherited(arguments);\r\n                    console.log('update_epsg_map::postCreate');\r\n                    this.getPanel().titleLabelNode.innerHTML = this.nls.widgetTitle;\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n\r\n            },\r\n\r\n            startup: function() {\r\n                try {\r\n                    this.inherited(arguments);\r\n                    console.log('update_epsg_map::startup');\r\n                    this._createToolbarUEM();\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n\r\n            },\r\n\r\n            _updateSrcView: function() {\r\n                this.epsg = this.selectUEM.value\r\n\r\n                const src = new SpatialReference({\r\n                    wkid: parseInt(this.epsg)\r\n                });\r\n\r\n                var ext = this.center[this.epsg];\r\n\r\n                this.map.removeAllLayers();\r\n\r\n                // this.map.spatialReference = src;\r\n\r\n                var basemap = new ArcGISDynamicMapServiceLayer(this.urlAgsIngemmet + ext.url_basemap);\r\n\r\n                this.map.addLayer(basemap);\r\n\r\n                // let customExtent = new Extent(ext.xmin, ext.ymin, ext.xmax, ext.ymax, src);\r\n                // this.map.setExtent(customExtent);\r\n                // this.map.setBasemap('satellite');\r\n                var featureLayer = this._getFeatureServiceUrl(this.map);\r\n                this.map.addLayer(featureLayer);\r\n\r\n            },\r\n\r\n            _getFeatureServiceUrl: function() {\r\n                var urlFeature = this.urlAgsIngemmet + this.center[this.epsg].url_cmi;\r\n                var featureLayer = new FeatureLayer(urlFeature);\r\n                return featureLayer;\r\n            },\r\n\r\n\r\n            _activateToolUEM: function(evt) {\r\n                // id del tag contenedor utlizado\r\n                var tool = evt.target.id.toUpperCase();\r\n                if (tool != \"ERASE\") {\r\n                    // Se establece el tipo de geometria a graficar por el id del tag contenedor\r\n                    tb.activate(Draw[tool]);\r\n                } else {\r\n                    // Elimina todos los graficos generados\r\n                    this.map.graphics.clear();\r\n                }\r\n            },\r\n\r\n            _createToolbarUEM: function() {\r\n                tb = new Draw(this.map);\r\n                tb.on('draw-end', this._addToMapUEM);\r\n            },\r\n\r\n            // _customStyleMarker: function(){\r\n            //     // Configurar estilo del Marker\r\n            //     let style = SimpleMarkerSymbol.STYLE_CIRCLE;\r\n            //     let colorMark = new Color.fromHex(this.config.colorMarker);\r\n            //     let colorLine = new Color.fromHex(this.config.colorBorderMarker);\r\n            //     let size = this.config.sizeMarker;\r\n            //     let width = this.config.sizeBorderMarker;\r\n            //     let sls = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, colorLine, width);\r\n            //     var symbol = new SimpleMarkerSymbol(style, size, sls, colorMark);\r\n            //     return symbol;\r\n            // },\r\n\r\n            _addToMapUEM: function(evt) {\r\n                // Se desactiva el evento de dibujo\r\n                tb.deactivate();\r\n\r\n                // var symbol = this._customStyleMarker();\r\n\r\n                let style = SimpleMarkerSymbol.STYLE_CIRCLE;\r\n                let colorMark = new Color.fromHex(\"#fab95b\");\r\n                let colorLine = new Color.fromHex(\"#212121\");\r\n                let size = 12;\r\n                let width = 1;\r\n                let sls = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, colorLine, width);\r\n                var symbol = new SimpleMarkerSymbol(style, size, sls, colorMark);\r\n\r\n                // Agregando estilo al grafico\r\n                var graphic = new Graphic(evt.geometry, symbol);\r\n\r\n                // Agregando el grafico al mapa\r\n                this.map.graphics.add(graphic);\r\n            }\r\n\r\n            // onOpen: function(){\r\n            //   console.log('update_epsg_map::onOpen');\r\n            // },\r\n\r\n            // onClose: function(){\r\n            //   console.log('update_epsg_map::onClose');\r\n            // },\r\n\r\n            // onMinimize: function(){\r\n            //   console.log('update_epsg_map::onMinimize');\r\n            // },\r\n\r\n            // onMaximize: function(){\r\n            //   console.log('update_epsg_map::onMaximize');\r\n            // },\r\n\r\n            // onSignIn: function(credential){\r\n            //   console.log('update_epsg_map::onSignIn', credential);\r\n            // },\r\n\r\n            // onSignOut: function(){\r\n            //   console.log('update_epsg_map::onSignOut');\r\n            // }\r\n\r\n            // onPositionChange: function(){\r\n            //   console.log('update_epsg_map::onPositionChange');\r\n            // },\r\n\r\n            // resize: function(){\r\n            //   console.log('update_epsg_map::resize');\r\n            // }\r\n\r\n            //methods to communication between widgets:\r\n\r\n        });\r\n\r\n    });"]}